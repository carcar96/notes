1、二分查找在一个有序序列中的时间复杂度：O（logN）
2、二叉树
先序遍历简单记为：根左右
中序遍历简单记为：左根右
后序遍历简单记为：左右根
3、排序
冒泡排序(复杂度为O(n*n))：依次比较相邻的两个数，将小数放在前面，大数放在后面。即在第一趟：首先比较第1个和第2个数，将小数放前，大数放后。然后比较第2个数和第3个数，将小数放前，大数放后，如此继续，直至比较最后两个数，将小数放前，大数放后。
快速排序(时间复杂度为O(n2))：快速排序（Quicksort）是对冒泡排序的一种改进。通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。
插入排序(时间复杂度为O(n^2))：将一个数据插入到已经排好序的有序数据中，从而得到一个新的、个数加一的有序数据，算法适用于少量数据的排序，是稳定的排序方法。
堆排序：